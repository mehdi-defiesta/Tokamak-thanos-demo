/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ResourceMetering,
  ResourceMeteringInterface,
} from "../../../contracts/L1/ResourceMetering";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_FEE_MAX_CHANGE_DENOMINATOR",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ELASTICITY_MULTIPLIER",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INITIAL_BASE_FEE",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_RESOURCE_LIMIT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_BASE_FEE",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TARGET_RESOURCE_LIMIT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "params",
    outputs: [
      {
        internalType: "uint128",
        name: "prevBaseFee",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "prevBoughtGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "prevBlockNum",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ResourceMetering__factory {
  static readonly abi = _abi;
  static createInterface(): ResourceMeteringInterface {
    return new utils.Interface(_abi) as ResourceMeteringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceMetering {
    return new Contract(address, _abi, signerOrProvider) as ResourceMetering;
  }
}
